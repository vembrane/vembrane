[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vembrane"
description = "Filter VCF/BCF files with Python expressions."
authors = [
    { name = "Till Hartmann" },
    { name = "Christopher Schröder" },
    { name = "Johannes Köster" },
    { name = "Jan Forster" },
    { name = "Marcel Bargull" },
    { name = "Felix Mölder" },
    { name = "Elias Kuthe" },
    { name = "David Lähnemann" }
]
requires-python = ">=3.12"
readme = "README.md"
dynamic = ["version"]

dependencies = [
  "pysam~=0.22.1",
  "cyvcf2~=0.31.1",
  "pyyaml~=6.0.2",
  "asttokens~=2.4.1",
  "numpy~=2.0.1",
  "intervaltree~=3.1.0",
  "yte~=1.8.1",
  "obonet~=1.1.0",
  "networkx~=3.3",
  "typing-extensions~=4.12.2",
]

[project.urls]
homepage = "https://github.com/vembrane/vembrane"
repository = "https://github.com/vembrane/vembrane"

[project.scripts]
vembrane = 'vembrane.cli:main'


[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pre-commit~=3.8.0",
    "pytest~=8.3.2",
    "ruff~=0.9.9",
]
test = [
    "pytest",
    "pytest-sugar",
]
lint = [
    "ruff",
    "mypy",
    "types-networkx",
    "types-pyyaml",
]

[tool.hatch.version]
path = "vembrane/__init__.py"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "B", "COM", "I"]
exclude = ["D"]
ignore = ["COM812"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.tox]
requires = ["tox>=4.23"]
env_list = ["format-check", "lints", "mypy", "3.12"]
allowlist_externals = ["pytest", "ruff"]
isolated_build = true

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
description = "run unit tests"
dependency_groups = ["test"]
commands = [["pytest", { replace = "posargs", default = ["tests"], extend = true }]]

[tool.tox.env."format-check"]
runner = "uv-venv-lock-runner"
skip_install = true
dependency_groups = ["lint"]
commands = [["ruff", "format", "--check"]]

[tool.tox.env."lints"]
runner = "uv-venv-lock-runner"
skip_install = true
dependency_groups = ["lint"]
commands = [["ruff", "check"]]

[tool.tox.env."mypy"]
runner = "uv-venv-lock-runner"
skip_install = false
dependency_groups = ["lint"]
commands = [["mypy"]]

[tool.uv]
dev-dependencies = [
    "mypy>=1.13.0",
    "types-pyyaml>=6.0.12.20240917",
    "types-networkx>=3.4.2.20250304",
    "ruff~=0.9.9",
    "tox>=4.23.2",
    "tox-uv>=1.20.1",
]

[tool.mypy]
python_version = "3.12"
packages = "vembrane"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
